{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/NavBar/navBar.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.js","components/NavBar/navBar.jsx","Redux/dialogsReducer.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","utils/validators/validator.js","components/common/FormsControl/FormsControl.js","components/Dialogs/Dialogs.jsx","HOC/WithAuthRedirect.jsx","components/Dialogs/dialogsContainer.jsx","api/api.js","utils/objectHelper.js","Redux/usersReducer.js","components/common/Paginator/Pagintor.jsx","components/Users/User.jsx","components/Users/Users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.js","Redux/usersSelectors.js","components/Users/usersContainer.jsx","Redux/profileReducer.js","components/Profile/myPosts/Post/Post.jsx","components/Profile/myPosts/myPosts.jsx","components/Profile/myPosts/myPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/appReducer.js","Redux/reduxStore.js","App.js","index.js","components/common/FormsControl/FormsControl.module.css","components/Profile/myPosts/myPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","props","className","s","posts","item","size","to","activeClassName","activeLink","ADD_MESSAGE","initialState","dialogsData","id","name","messagesData","message","dialogsReducer","state","action","type","body","newMessageText","MessageItem","DialogItem","dialog","active","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","form_control","Textarea","restProps","child","Input","createField","placeholder","validators","component","Field","validate","maxLength20","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","DialogsElements","map","d","messagesElement","m","Message","dialogs","dialogs_item","messages","values","sendMessage","newMessageBody","console","log","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","deleteFollowUser","delete","postFollowUser","post","profileAPI","userId","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","useState","portionNumber","setPortionNumber","leftPortionRange","RightPortionNumber","onClick","prev","page","selected_page","e","User","unFollow","follow","text_color_page","src","photos","small","width","disabled","some","Users","Preloader","preloader","getPageSize","usersPage","getTotalUsersCount","getCurrentPage","getIsFetching","getToggleIsFollowingProgress","getFollowingInProgress","createSelector","u","UsersContainer","pageNumber","followThunkCreator","unfollowThunkCreator","bind","totalCount","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","DELETE_POST","likesCount","newPostText","profile","setUserProfile","setStatus","profileReducer","newPost","newText","p","Post","content","MyPosts","memo","PostsElement","postsBlock","AddPostReduxForm","addPost","maxLength10","MyPostsContainer","profilePage","updateNewPostText","text","updateNewPostTextActionCreator","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","setState","autoFocus","onBlur","updateStatus","onChange","currentTarget","onFocus","event","target","select","onDoubleClick","ProfileInfo","descriptionBlock","large","alt","Profile","ProfileContainer","match","params","authorisedUserId","history","getUsersProfileThunkCreator","getStatus","withRouter","Header","header","login_block","login","LogoutThunkCreator","SET_USER_DATA","setAuthUserData","getAuthUserDataThunkCreator","authReducer","HeaderContainer","LoginReduxForm","form_summary_error","LoginThunkCreator","stopSubmit","_error","formData","SET_INITIALIZED_STATE","initialized","reducers","combineReducers","app","appReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","initializeAppThunkCreator","path","render","AppContainer","promise","Promise","all","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d392e714.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected_page\":\"Paginator_selected_page__2eREY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_color_page\":\"Users_text_color_page__1ncwa\",\"selected_page\":\"Users_selected_page__Ip6XU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"navBar_posts__2r8Jc\",\"item\":\"navBar_item__1x_wt\",\"activeLink\":\"navBar_activeLink__2oDK6\",\"size\":\"navBar_size__1kXxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-6H6\",\"dialogs_item\":\"Dialogs_dialogs_item__2fnTv\",\"activeLink\":\"Dialogs_activeLink__18OqN\",\"dialog\":\"Dialogs_dialog__3rxe7\",\"messages\":\"Dialogs_messages__1k247\",\"massage\":\"Dialogs_massage__mb6BZ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './navBar.module.css'\r\n\r\nconst Nav = (props) => {\r\n\r\n   \r\n    return(\r\n        <nav className = {s.posts}>\r\n          <div className = {`${s.item} ${s.size}`}>\r\n            <NavLink to = \"/profile\" activeClassName = {s.activeLink}>Profile</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.size}`}>\r\n            <NavLink to = \"/dialogs\" activeClassName = {s.activeLink}>Messages</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.size}`}>\r\n             <NavLink to = \"/users\" activeClassName = {s.activeLink}>Users</NavLink>\r\n          </div>\r\n            <div className = {`${s.item} ${s.size}`}>\r\n            <NavLink to = \"/news\" activeClassName = {s.activeLink}>News</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.size}`}>\r\n            <NavLink to = \"/music\" activeClassName = {s.activeLink}>Music</NavLink>\r\n          </div>\r\n          <div className = {`${s.item} ${s.size}`}>\r\n            <NavLink to = \"/settings\" activeClassName = {s.activeLink}>Settings</NavLink>\r\n          </div>          \r\n      </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Nav","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    \r\n        dialogsData: [\r\n            {id: 1, name: 'qweeqwe'}, \r\n            {id: 2, name: 'fasdasd'}, \r\n            {id: 3, name: 'zxcvmqweqwvz'}, \r\n            {id: 4, name: 'qwvvk'}\r\n        ],\r\n    \r\n        messagesData: [\r\n            {id: 1, message: \"hi\"},\r\n            {id: 2, message: \"bye\"},\r\n            {id: 3, message: \"my\"}\r\n        ],\r\n\r\n  \r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type){\r\n        case ADD_MESSAGE: {\r\n\r\n            let body = action.newMessageText\r\n\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 8, message: body}]\r\n\r\n            }\r\n        }\r\n        /*case UPDATE_NEW_MESSAGE_TEXT: {\r\n\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newBody\r\n            }\r\n        }*/\r\n        default: {\r\n            return state\r\n        }\r\n    }   \r\n\r\n\r\n}\r\nexport const addMessageActionCreator = (newMessageText) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageText\r\n    }\r\n}\r\n\r\n/*export const updateNewMessageTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newBody: text\r\n    }\r\n}*/\r\n\r\n\r\n   \r\nexport default dialogsReducer","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\n    const MessageItem = (props) =>{\r\n        return(\r\n            <div className = {s.message}>\r\n                <div className = {s.message}>{props.message}</div>\r\n            </div>\r\n            \r\n            \r\n\r\n        )\r\n    }\r\n\r\n\r\nexport default MessageItem","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n    const DialogItem = (props) =>{\r\n        return(\r\n            <div className = {s.dialog + ' ' + s.active}>\r\n                <NavLink to = { \"/Dialogs/\" + props.id } activeClassName = {s.activeLink}> {props.name} </NavLink>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    \r\n      \r\n\r\n\r\nexport default DialogItem","export const requiredField = (value) => {\r\n    if (value) return undefined\r\n\r\n    return 'Filed is required'\r\n}\r\n\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `max Length is ${maxLength} symbols`\r\n\r\n    return undefined\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './FormsControl.module.css'\r\nimport {requiredField} from \"../../../utils/validators/validator\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\n// ФАЙЛ НУЖЕН ДЛЯ СОЗДАНИЯ СВОЕГО INPUT ИЛИ TEXTAREA ДЛЯ ТОГО ЧТОБЫ ВЫСВЕЧИВАТЬ ОШИБКИ\r\n\r\n/*\r\n// для того чтобы каждый раз не присать props.meta через дуструктор в передаче параметров добивим этот параметр мета\r\n\r\nexport const Textarea = (props, meta) => {\r\n    let hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.form_control + \" \" + (hasError? s.error: '')}>\r\n            <textarea {...props} />\r\n            {hasError? <span>{meta.error}</span>: ''}\r\n        </div>\r\n    )\r\n}\r\n// в пропсах сидит тип поля и плейсхолдер, в мета сидит параметры по типо touched, visited и т.д., а в input имя поля\r\nexport const Input = ({meta, input, ...props}) => {\r\n    console.log(input)\r\n    console.log(props)\r\n    let hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.form_control + \" \" + (hasError? s.error: '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError? <span>{meta.error}</span>: ''}\r\n        </div>\r\n    )\r\n}*/\r\n\r\nconst FormControl = ({input, meta: {touched, error},children}) => {\r\n\r\n    const hasError = touched && error\r\n    return(\r\n        <div className={s.form_control + \" \" + (hasError? s.error: '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError? <span>{error}</span>: ''}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) =>{\r\n\r\n   const {input, meta, child, ...restProps} = props\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) =>{\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props) => (\r\n    <Field\r\n        placeholder={placeholder}\r\n        name ={name}\r\n        component={component}\r\n        validate = {validators}\r\n        {...props}\r\n         />\r\n)\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport MessageItem from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControl\";\r\n    import {maxLengthCreator, requiredField} from \"../../utils/validators/validator\";\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    \r\n    const DialogsElements = state.dialogsData\r\n    .map(d => <DialogItem name = {d.name} id = {d.id} key = {d.id}/> )\r\n    const messagesElement = state.messagesData\r\n    .map(m => <MessageItem message = {m.message} key = {m.id}/>)\r\n    \r\n    \r\n\r\n\r\n    /*const onNewMessageChange = (e) => {\r\n        let body = e.target.value      \r\n        props.updateNewMessageBody(body)\r\n    }  */\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n        console.log()\r\n    }\r\n\r\n\r\n    return(         \r\n        <div className = {s.dialogs}>\r\n\r\n            <div className = {s.dialogs_item}> \r\n                { DialogsElements }                \r\n            </div>\r\n\r\n            <div className = {s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit = {addNewMessage}/>\r\n        </div>\r\n    )    \r\n}\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name = \"newMessageBody\" placeholder={\"enter mess\"} validate={[requiredField, maxLength20]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"addMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirectHOC = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n\r\n        render() {\r\n            if(this.props.isAuth === false) return <Redirect to = \"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedRedirectComponent  = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}\r\n","import React from 'react'\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../Redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirectHOC} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n\r\n    return {\r\n\r\n      /*  updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageTextActionCreator(body))\r\n        },*/\r\n        sendMessage: (newMessageText) => {\r\n\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n/*let authRedirectComponent = withAuthRedirectHOC(Dialogs) // сидит в папке хок, хок нужен для !дедублирования кода, например редиректа\r\n\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent);*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectHOC\r\n)(Dialogs)","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:\r\n        {\r\n            'API-KEY': '042614c5-759a-4e8d-950e-8e989a1338dc'\r\n        }\r\n})\r\n\r\nexport const usersAPI =\r\n    {\r\n        getUsers: (currentPage = 1, pageSize = 10) => {\r\n            return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n                return response.data\r\n            })\r\n        },\r\n\r\n        /*getUserProfile: (userId) => {\r\n            console.warn('use profileAPI')\r\n            return profileAPI.getUserProfile(userId)\r\n\r\n        },*/\r\n\r\n\r\n        deleteFollowUser: (id) => {\r\n            return instance.delete(`follow/${id}`).then(response => {\r\n                return response.data\r\n            })\r\n        },\r\n\r\n        postFollowUser: (id) => {\r\n            return instance.post(`follow/${id}`, null).then(response => {\r\n                return response.data\r\n            })\r\n        },\r\n\r\n    }\r\n\r\nexport const profileAPI =\r\n    {\r\n        getUserProfile: (userId) => {\r\n            return instance.get(`profile/` + userId)\r\n        },\r\n        getStatus: (userId) => {\r\n            return instance.get(`profile/status/` + userId)\r\n        },\r\n        updateStatus: (status) => {\r\n            return instance.put(`profile/status` , {status: status})\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user =>  {\r\n        if (user[objPropName] === itemId){\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelper\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:true})\r\n                /*users: state.users.map(user =>  {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                }),*/\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed:false})\r\n                /*users: state.users.map(user =>  {\r\n                    if (user.id === action.userId){\r\n                        return {...user, followed: true }\r\n                    }\r\n                    return user\r\n                }),*/\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return{\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]:\r\n                    state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => { return { type: FOLLOW, userId }}\r\nexport const unFollowSuccess = (userId) => { return { type: UNFOLLOW, userId }}\r\nexport const setUsers = (users) => {return {type: SET_USERS, users} }\r\nexport const setCurrentPage = (currentPage) => {return {type: SET_CURRENT_PAGE, currentPage}}\r\nexport const setTotalUsersCount = (totalUsersCount) => {return { type: SET_TOTAL_USERS_COUNT, count: totalUsersCount}}\r\nexport const toggleIsFetching = (isFetching) => {return { type: TOGGLE_IS_FETCHING, isFetching}}\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => { return { type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId}}\r\n\r\n\r\n\r\nexport const getUsersThunkCreator =  (currentPage, pageSize)  => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize) // getUsers с папки апи, data приходит с гет запроса(смотри в папке апи)\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n    dispatch(toggleIsFetching(false))\r\n\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followThunkCreator = (userId) => async (dispatch) => {\r\n    //let apiMethod = usersAPI.postFollowUser.bind(usersAPI)\r\n    //let actionCreator = followSuccess\r\n    followUnfollowFlow(dispatch, userId, usersAPI.postFollowUser.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollowThunkCreator = (userId) => async (dispatch) => {\r\n    //let apiMethod = usersAPI.deleteFollowUser.bind(usersAPI)\r\n    //let actionCreator = unFollowSuccess\r\n    followUnfollowFlow(dispatch, userId, usersAPI.deleteFollowUser.bind(usersAPI), unFollowSuccess)\r\n}\r\n\r\nexport default usersReducer","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\n\r\nlet Paginator = ({currentPage, totalUsersCount, pageSize, onPageChanged, portionSize=10}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage/portionSize))\r\n    let leftPortionRange = (portionNumber - 1) * portionSize+1\r\n    let RightPortionNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1? <button onClick={() => setPortionNumber(prev => prev-1)}>prev</button>: ''\r\n            }\r\n            {\r\n                pages\r\n                    .filter(page => {\r\n                        if(page >= leftPortionRange && page <= RightPortionNumber){\r\n                            return page\r\n                        }})\r\n                    .map(page => <span className={currentPage===page? s.selected_page:''}\r\n                                       key = {page}\r\n                                       onClick={(e) => onPageChanged(page)}>{page + ' '}</span>)\r\n            }\r\n            {\r\n                portionNumber < pages.length/portionSize ? <button onClick={() => setPortionNumber(prev => prev+1)}>next</button> : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unFollow, follow}, ...props) => {\r\n    return (\r\n\r\n        <span className={s.text_color_page}>\r\n            <NavLink to={`/profile/` + user.id}>\r\n                <div>\r\n                    <img\r\n                        src={user.photos.small != null ? user.photos.small : \"https://codespeedy.com/wp-content/uploads/2018/12/avatar1.png\"}\r\n                        width={'90px'}>\r\n                    </img>\r\n                </div>\r\n            </NavLink>\r\n            <div>\r\n                {\r\n                    user.followed ?\r\n                        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => {\r\n                                    unFollow(user.id)\r\n                                }}> unfollow\r\n                        </button> :\r\n                        <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                onClick={() => {\r\n                                    follow(user.id)\r\n                                }}> follow\r\n                        </button>\r\n                }\r\n            </div>\r\n            <div>{user.name} </div>\r\n            <div>{\"user.location.city\"} </div>\r\n            <div>{\"user.location.country\"} </div>\r\n            <div>{user.status} </div>\r\n\r\n        </span>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Pagintor\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div className=\"user\">\r\n            {\r\n                props.users.map(user => <User key={user.id}\r\n                                              user={user}\r\n                                              followingInProgress={props.followingInProgress}\r\n                                              follow = {props.follow}\r\n                                              unFollow = {props.unFollow} />\r\n                )\r\n            }\r\n            <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged} currentPage = {props.currentPage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.d878cc22.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <img src = {preloader} />\r\n\r\n}\r\n\r\nexport default Preloader","import {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getToggleIsFollowingProgress = (state) => {\r\n    return state.usersPage.toggleIsFollowingProgress\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n/*export const getUsersSelector = (state) => {\r\n    return getUsers(state).filter(u => true)\r\n}*/\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (u) => {\r\n    return u.filter(u => true)\r\n})","import React from 'react'\r\nimport {\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    getUsersThunkCreator,\r\n    followThunkCreator,\r\n    unfollowThunkCreator\r\n\r\n} from \"../../Redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching,\r\n    getPageSize, getToggleIsFollowingProgress,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    onPageChanged={this.onPageChanged}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    follow={this.props.followThunkCreator}\r\n                    unFollow={this.props.unfollowThunkCreator}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        //users: getUsers(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        toggleIsFollowingProgress: getToggleIsFollowingProgress(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            followThunkCreator,\r\n            unfollowThunkCreator,\r\n            setCurrentPage,\r\n            toggleIsFollowingProgress,\r\n            getUsers: getUsersThunkCreator\r\n        }),\r\n)(UsersContainer)","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SER-USER-PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE-POST'\r\n\r\n\r\nlet initialState = {\r\n    \r\n        posts: [\r\n            {id: 1, message: 'hiqweqwe', likesCount: 12},\r\n            {id: 2, message: 'bye', likesCount: 0}\r\n        ],\r\n        newPostText: '',\r\n        profile: null,\r\n        status: \"\"\r\n    }\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                likesCount: 4\r\n            }\r\n\r\n            return  {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return{\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n\r\n            default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n    \r\n  \r\n}\r\nexport const addPostActionCreator = (newPost) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPost\r\n    }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deletePostActionCreator = (id) => {\r\n    return{\r\n        type: DELETE_POST,\r\n        id\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersProfileThunkCreator = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) =>{\r\n\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return(\r\n        <div className = {s.content}>\r\n\r\n          <div className = {s.item}>\r\n            <img src = \"https://is1-ssl.mzstatic.com/image/thumb/Music115/v4/7d/2e/92/7d2e9291-a8db-8e1c-c27f-93d8270d0a70/pr_source.png/800x800cc.jpg\"></img>  \r\n            {props.message}\r\n          </div>\r\n          <span>{props.likesCount}</span>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport s from './myPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n    console.log('render')\r\n    const PostsElement = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const addMessage = (values) => {\r\n        props.addPost(values.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n\r\n            <div className={s.postsBlock}>\r\n                <h3>My Posts</h3>\r\n            </div>\r\n\r\n            <AddPostReduxForm onSubmit={addMessage}/>\r\n\r\n            <div className={s.posts}>\r\n                {PostsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst addPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPost\" placeholder={\"add post\"}\r\n                       validate={[requiredField, maxLength10]}/>\r\n            </div>\r\n\r\n            <div className={s.newPost}>\r\n                <button> Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form: \"addPost\"})(addPostForm)\r\n\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../Redux/profileReducer'\r\nimport MyPosts from './myPosts';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: (newPost) => {\r\n\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(false)\r\n    let [editMode, setEditMode] = [stateWithSetState[0], stateWithSetState[1]]*/\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    let [state, setState] = useState(0)\r\n\r\n    let counter = () =>{\r\n        setState(state+1)\r\n    }\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    let handleFocus = (event) => event.target.select()\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>{state}</div>\r\n            <button onClick = {counter}></button>\r\n\r\n\r\n            {\r\n                !editMode ?\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}> {props.status || \"----\"} </span>\r\n                    </div>:\r\n                    <div>\r\n                        <input  value={status} autoFocus={true} onBlur = {deactivateEditMode} onChange={onStatusChange} onFocus={handleFocus}/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\nclass ProfileStatus extends React.Component{\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        //this.state.editMode = true\r\n    }\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select()\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot)  {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState(\r\n                {status: this.props.status}\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode ? <div>\r\n                            <span onDoubleClick={this.activateEditMode}>{this.props.status || \"status doesn't exist\"}</span>\r\n                        </div> :\r\n                        <div>\r\n                            <input onChange={this.onStatusChange} onBlur={this.deActivateEditMode} autoFocus={true}\r\n                                   onFocus={this.handleFocus} value={this.state.status}\r\n                            />\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status,updateStatus }) => {\r\n\r\n\r\n\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=''/>\r\n                <ProfileStatusWithHooks status={status} updateStatus = {updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport MyPostsContainer from './myPosts/myPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {updateStatus} from \"../../Redux/profileReducer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n        <ProfileInfo profile ={props.profile} status = {props.status} updateStatus = {props.updateStatus} />\r\n        <MyPostsContainer />\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfileThunkCreator, setUserProfile, updateStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId\r\n\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\") // пушим в юрл login\r\n            }\r\n        }\r\n\r\n        this.props.getUsersProfileThunkCreator(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n    render () {\r\n        return(\r\n            <div>\r\n                <Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n//let authRedirectComponent = withAuthRedirectHOC(ProfileContainer) // сидит в папке хок, хок нужен для !делублирования кода, например редиректа\r\n\r\n/*\r\nlet withUrlDataContainerComponent = withRouter(authRedirectComponent) //когда нужно взять адресную строку создаём таким образом новую компоненту и передаём через connect\r\n\r\nexport default connect(mapStateToProps, {setUserProfile, getUsersProfileThunkCreator})(withUrlDataContainerComponent)*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getUsersProfileThunkCreator, getStatus, updateStatus}),\r\n    withRouter ,\r\n    //withAuthRedirectHOC\r\n)(ProfileContainer)\r\n\r\n","import React from 'react'\r\nimport './../../App.css';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className = {s.header}>\r\n            <img src = 'https://www.oasdom.com/wp-content/uploads/2018/01/oasdom.com-6-free-logo-design-online.jpg' alt = ''/>\r\n            <div className={s.login_block}>\r\n                {\r\n                    props.isAuth?\r\n                        <div>{props.login} - <button onClick={props.LogoutThunkCreator}>logout</button></div> :\r\n                        <NavLink to = {'/login'}> Login </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.data, // теперь данные будут не в state а в data, так как все данные лежат в екшене мы можем так сделать\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nexport const getAuthUserDataThunkCreator = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        //let {id, login, email} = data.data\r\n        dispatch(setAuthUserData(response.data.id, response.data.email, response.data.login, true))\r\n    }\r\n\r\n}\r\nexport const LoginThunkCreator = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserDataThunkCreator())\r\n    } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n        let action = stopSubmit(\"login\", {_error: message}) // в кавычках узказываем название формы которую хотим стопнуть, а потом укзаываем проблемное поле(сообщение об ошибке)\r\n        dispatch(action)\r\n    }\r\n\r\n}\r\nexport const LogoutThunkCreator = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer\r\n\r\n","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogoutThunkCreator} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Header\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {LogoutThunkCreator})(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControl\";\r\nimport {requiredField} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport authReducer, {LoginThunkCreator, LogoutThunkCreator} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../common/FormsControl/FormsControl.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error})=> { // замена пропсам\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    {createField(\"email\", \"email\", [requiredField], Input)}\r\n                </div>\r\n                <div>\r\n                    {createField(\"pass\", \"password\", [requiredField], Input, {type: \"password\"} )}\r\n                </div>\r\n                <div>\r\n                    {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"} )} rememberMe\r\n                </div>\r\n\r\n\r\n                {error? <div className = {s.form_summary_error}>{error}</div>:''}\r\n\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.LoginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n\r\n    }\r\n\r\n    if (props.isAuth === true) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n       return (\r\n            <div>\r\n                <h1>login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {LoginThunkCreator})(Login)","import {getAuthUserDataThunkCreator} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED_STATE = 'SET-INITIALIZED-STATE'\r\n\r\nlet initialState = {\r\n   initialized: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n        case SET_INITIALIZED_STATE:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => { return {type: SET_INITIALIZED_STATE}}\r\n\r\nexport const initializeAppThunkCreator = () => (dispatch) =>{\r\n    let promise = dispatch(getAuthUserDataThunkCreator());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\nexport default authReducer\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogsReducer\"\r\nimport profileReducer from \"./profileReducer\"\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage:  dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware)))\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n\r\n\r\nexport default store","import React, {lazy, Suspense} from 'react'\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom'\nimport './App.css';\nimport Nav from './components/NavBar/navBar';\nimport DialogsContainer from './components/Dialogs/dialogsContainer';\nimport UsersContainer from \"./components/Users/usersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeAppThunkCreator} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport store from \"./Redux/reduxStore\";\n\n\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeAppThunkCreator()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <div className=\"app_wrapper\">\n                <HeaderContainer/>\n                <Nav/>\n\n                <div className=\"app-wrapper-content\">\n                    {/* <Route exact path = \"/Profile\" component = {Profile} />\n              <Route path = \"/Dialogs\" component = {Dialogs} /> */}\n                    <Route path=\"/profile/:userId?\" render={() =>\n                        <ProfileContainer/>}/> {/*добавили в match params который будет равен userId, а вопросительный знак даёт понять что этот парметр не обязателен*/}\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n\n                </div>\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(connect(mapStateToProps, {initializeAppThunkCreator}), withRouter)(App)\n\nconst MainApp = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default MainApp\n","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from \"./App\";\n\n \n\nReactDOM.render(\n   //<React.StrictMode>\n    <MainApp/>,\n   //</React.StrictMode>,\n   document.getElementById('root')\n);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"FormsControl_form_control__2jdh2\",\"error\":\"FormsControl_error__n4VTk\",\"form_summary_error\":\"FormsControl_form_summary_error__154Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"myPosts_content__34_TC\",\"posts\":\"myPosts_posts__1ZlO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1xh1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3X132\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2zSmy\",\"login_block\":\"Header_login_block__1UBjc\"};"],"sourceRoot":""}